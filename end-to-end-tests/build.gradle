apply plugin: EndToEndTestsPlugin

dependencies {
    testImplementation project(":customer-service:customer-service-api-web")
    testImplementation project(":order-service:order-service-api-web")
    testImplementation project(":order-service:order-service-api-messaging")
    testImplementation project(":api-gateway-service:api-gateway-service-api-web")
    testImplementation "io.eventuate.examples.common:eventuate-examples-common-money:$eventuateCommonExamplesVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testImplementation "io.eventuate.util:eventuate-util-test"

    // TODO shouldn't need to do this too
    endToEndTestImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    endToEndTestImplementation "io.eventuate.platform.testcontainer.support:eventuate-platform-testcontainer-support-service:$eventuatePlatformTestContainerSupportVersion"
    endToEndTestImplementation "io.eventuate.cdc:eventuate-cdc-testcontainers"
    endToEndTestImplementation "io.eventuate.common:eventuate-common-testcontainers"
    endToEndTestImplementation "io.eventuate.messaging.kafka:eventuate-messaging-kafka-testcontainers"
}

endToEndTest.dependsOn(":customer-service:customer-service-main:assemble", ":order-service:order-service-main:assemble", ":api-gateway-service:api-gateway-service-main:assemble")
check.shouldRunAfter(":customer-service:customer-service-main:check")
check.shouldRunAfter(":order-service:order-service-main:check")
check.shouldRunAfter(":api-gateway-service:api-gateway-service-main:check")

endToEndTest {
    if (project.hasProperty('endToEndTestMode'))
        systemProperty "endToEndTestMode", endToEndTestMode

}