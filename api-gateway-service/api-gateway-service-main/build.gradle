
apply plugin: "java"
apply plugin: 'org.springframework.boot'
apply plugin: IntegrationTestsPlugin
apply plugin: ComponentTestsPlugin

configurations.all {
    exclude  module: "spring-boot-starter-web"
}

repositories {
    maven { url "${project.rootDir}/build/repo" }
}

dependencies {
    implementation "commons-lang:commons-lang:2.6"

    implementation project(":api-gateway-service:api-gateway-service-api-web")

    implementation "io.eventuate.util:eventuate-util-swagger-ui"

    implementation "io.projectreactor:reactor-tools"

    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.cloud:spring-cloud-starter-gateway"
    implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j"
    implementation "org.apache.commons:commons-lang3"
    implementation "org.springframework.boot:spring-boot-starter-actuator"



    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"

    implementation group: 'io.netty', name: 'netty-resolver-dns-native-macos', version: '4.1.75.Final', classifier: 'osx-aarch_64'
}

if (!springBootVersion.startsWith("3")) {
    dependencies {
        implementation "io.github.resilience4j:resilience4j-spring-boot2"
        implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
        implementation "org.springframework.cloud:spring-cloud-sleuth-zipkin"
        testImplementation "eventuate-tram-sagas-examples-customers-and-orders.customer-service:customer-service-web-stubs:0.1.0-SNAPSHOT:stubs"
    }
} else {
    dependencies {
        implementation "io.github.resilience4j:resilience4j-spring-boot3"
    }
    integrationTest {
        exclude '**/CustomerServiceProxyTest.class'
    }
}

compileTestJava.dependsOn(":customer-service:customer-service-web:publish")
