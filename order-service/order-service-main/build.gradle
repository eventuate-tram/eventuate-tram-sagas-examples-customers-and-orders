apply plugin: ServicePlugin

dependencies {
    implementation project(":order-service:order-service-restapi")
    implementation project(":order-service:order-service-sagas")
    implementation project(":order-service:order-service-persistence")
    implementation "io.eventuate.tram.core:eventuate-tram-spring-logging"

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"

    testImplementation "org.mockito:mockito-core:4.11.0"

    componentTestImplementation project(":order-service:order-service-domain")
    componentTestImplementation project(":order-service:order-service-proxies-customer-service")

    componentTestImplementation "io.eventuate.platform.testcontainer.support:eventuate-platform-testcontainer-support-service:$eventuatePlatformTestContainerSupportVersion"

    componentTestImplementation "io.eventuate.common:eventuate-common-testcontainers"
    componentTestImplementation "io.eventuate.messaging.kafka:eventuate-messaging-kafka-testcontainers"
    componentTestImplementation "io.eventuate.cdc:eventuate-cdc-testcontainers"
    componentTestImplementation "io.rest-assured:rest-assured"
    componentTestImplementation "io.eventuate.tram.core:eventuate-tram-spring-in-memory"
    componentTestImplementation "io.eventuate.tram.springwolf:eventuate-tram-springwolf-support-testing"

}

check.shouldRunAfter(":order-service:order-service-restapi:check")
check.shouldRunAfter(":order-service:order-service-persistence:check")
check.shouldRunAfter(":order-service:order-service-sagas:check")
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}